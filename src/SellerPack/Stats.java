/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SellerPack;

import Entities.Seller;
import computersales.ConnectionClass;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Sasha
 */
public class Stats extends javax.swing.JDialog {

    ConnectionClass c = new ConnectionClass();

    /**
     * Creates new form Stats
     */
    public Stats(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        panel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        recordNum = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        testNum = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panel.setBackground(new java.awt.Color(153, 153, 153));
        panel.setLayout(new javax.swing.BoxLayout(panel, javax.swing.BoxLayout.LINE_AXIS));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        recordNum.setText("100");
        recordNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordNumActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Statement, One by One", "Statement, One query", "Prepared statement, One by One", "Prepared statement, Batches"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.Long.class, java.lang.Long.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane2.setViewportView(table);

        testNum.setText("10");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)
                        .addComponent(recordNum, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(testNum, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 741, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(recordNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        int recordNums = Integer.parseInt(recordNum.getText());
        int testNums = Integer.parseInt(testNum.getText());
        
        long[] times= new long[4];

        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();

        long start;
        long finish;
        long timeConsumedMillis;
        
//        ArrayList<Long>[] stats = new ArrayList[4];
        for (int test = 0; test < testNums; test++) {

            start = System.currentTimeMillis();
            int i = 0;
            for (; i < recordNums; i++) {
                Seller newOne = new Seller(-1, "surname" + i, "name" + i);
                c.addSeller(newOne);
            }

            finish = System.currentTimeMillis();
            timeConsumedMillis = finish - start;

            barChartData.setValue(timeConsumedMillis, "Statement, One by One", "Test" + test);
            times[0]+=timeConsumedMillis;
//            stats[0].add(timeConsumedMillis);

            ArrayList<Seller> sls = new ArrayList<>();
            start = System.currentTimeMillis();
            for (; i < 2 * recordNums; i++) {
                Seller newOne = new Seller(-1, "surname" + i, "name" + i);
                sls.add(newOne);
            }
            c.addSellers(sls);
            finish = System.currentTimeMillis();
            timeConsumedMillis = finish - start;

            barChartData.setValue(timeConsumedMillis, "Statement, One query", "Test" + test);
            times[1]+=timeConsumedMillis;
//            stats[1].add(timeConsumedMillis);

            start = System.currentTimeMillis();
            for (; i < 3 * recordNums; i++) {
                Seller newOne = new Seller(-1, "surname" + i, "name" + i);
                c.addSellerPrepared(newOne);
            }
            finish = System.currentTimeMillis();
            timeConsumedMillis = finish - start;
            barChartData.setValue(timeConsumedMillis, "Prepared statement, One by One", "Test" + test);            
            times[2]+=timeConsumedMillis;
//            stats[2].add(timeConsumedMillis);

            ArrayList<Seller> sls1 = new ArrayList<>();
            start = System.currentTimeMillis();
            for (; i < 4 * recordNums; i++) {
                Seller newOne = new Seller(-1, "surname" + i, "name" + i);
                sls1.add(newOne);
            }
            c.addSellersPrepared(sls1);
            finish = System.currentTimeMillis();
            timeConsumedMillis = finish - start;
            barChartData.setValue(timeConsumedMillis, "Prepared statement, Batches", "Test" + test);     
            times[3]+=timeConsumedMillis;       
//            stats[3].add(timeConsumedMillis);
        }
        
        JFreeChart barChart = ChartFactory.createLineChart("Statistics", "",
                "", barChartData, PlotOrientation.VERTICAL,
                true, true, true);
        CategoryPlot timeChart = barChart.getCategoryPlot();
        timeChart.setRangeGridlinePaint(Color.GREEN);

        timeChart.getRenderer().setSeriesPaint(0, Color.RED);
        timeChart.getRenderer().setSeriesPaint(1, Color.GREEN);
        timeChart.getRenderer().setSeriesPaint(2, Color.MAGENTA);
        timeChart.getRenderer().setSeriesPaint(3, Color.BLUE);


        ChartPanel barPanel = new ChartPanel(barChart);
        panel.removeAll();
        panel.add(barPanel, BorderLayout.CENTER);
        panel.validate();
        
        for(int i=0;i<4;i++)
        table.getModel().setValueAt(times[i]/testNums, 0, i);


    }//GEN-LAST:event_jButton1ActionPerformed

    private void recordNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recordNumActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField recordNum;
    private javax.swing.JTable table;
    private javax.swing.JTextField testNum;
    // End of variables declaration//GEN-END:variables
}
